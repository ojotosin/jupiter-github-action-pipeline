name: Deploy to AWS using Terraform Cloud

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: "Terraform cloud to aws"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform Cloud CLI
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: |
          terraform init -input=false \

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color          

      - name: Terraform Plan
        if: github.event_name == 'pull_request'
        run: |
          terraform init
          terraform plan -out=tfplan

      - name: Comment PR with Terraform plan
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          script: |
            const { data } = await github.repos.get({
              owner: context.repo.owner,
              repo: context.repo.repo
            })
            const commentBody = `
            **Terraform Plan:**
            <details><summary>Show/Hide</summary>
            \`\`\`diff\n${{ steps.terraform-plan.outputs.plan_output }}\n\`\`\`
            </details>
            `
            await github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            })

      - name: Fail if Terraform plan fails
        if: steps.terraform-plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
        run: |
          terraform apply tfplan
